{"ast":null,"code":"var _jsxFileName = \"C:\\\\Vonder\\\\my-app\\\\src\\\\useCalculate.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useCalculate = () => {\n  _s();\n\n  const [num1, setNum1] = useState(0);\n  const [num2, setNum2] = useState(0);\n  const [total, setTotal] = useState(0);\n  const plusCal = useCallback(() => {\n    setTotal(num1 + num2);\n  }, [num1, num2]);\n  const minusCal = useCallback(() => {\n    setTotal(num1 - num2);\n  }, [num1, num2]);\n  const multiplyCal = useCallback(() => {\n    setTotal(num1 * num2);\n  }, [num1, num2]);\n  const DivideCal = useCallback(() => {\n    setTotal(num1 / num2);\n  }, [num1, num2]);\n  const resetCal = useCallback(() => {\n    setNum1(0);\n    setNum2(0);\n    setTotal(0);\n  }, []);\n  useEffect(() => {\n    if (total) {\n      console.log('Total', total);\n    }\n  }, [total]);\n  const Calculator = useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number 1 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: num1,\n          onChange: e => setNum1(+e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number 2 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: num2,\n          onChange: e => setNum2(+e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Cal :\", num1, \" + \", num2, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Result : \", total.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this);\n  }, [num1, num2, total]);\n  return {\n    plusCal,\n    Calculator,\n    minusCal,\n    multiplyCal,\n    DivideCal,\n    resetCal\n  };\n};\n\n_s(useCalculate, \"YYDHSjX4WETrAgTWIVzNlSKMDrU=\");","map":{"version":3,"sources":["C:/Vonder/my-app/src/useCalculate.tsx"],"names":["useCallback","useEffect","useMemo","useState","useCalculate","num1","setNum1","num2","setNum2","total","setTotal","plusCal","minusCal","multiplyCal","DivideCal","resetCal","console","log","Calculator","e","target","value","toFixed"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,QAA1C,QAA0D,OAA1D;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAS,CAAT,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAS,CAAT,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAS,CAAT,CAAlC;AAEA,QAAMQ,OAAO,GAAGX,WAAW,CAAC,MAAK;AAC7BU,IAAAA,QAAQ,CAACL,IAAI,GAACE,IAAN,CAAR;AACH,GAF0B,EAEzB,CAACF,IAAD,EAAOE,IAAP,CAFyB,CAA3B;AAIA,QAAMK,QAAQ,GAAGZ,WAAW,CAAC,MAAK;AAC9BU,IAAAA,QAAQ,CAACL,IAAI,GAACE,IAAN,CAAR;AACH,GAF2B,EAE1B,CAACF,IAAD,EAAOE,IAAP,CAF0B,CAA5B;AAIA,QAAMM,WAAW,GAAGb,WAAW,CAAC,MAAK;AACjCU,IAAAA,QAAQ,CAACL,IAAI,GAACE,IAAN,CAAR;AACH,GAF8B,EAE7B,CAACF,IAAD,EAAOE,IAAP,CAF6B,CAA/B;AAIA,QAAMO,SAAS,GAAGd,WAAW,CAAC,MAAK;AAC/BU,IAAAA,QAAQ,CAACL,IAAI,GAACE,IAAN,CAAR;AACH,GAF4B,EAE3B,CAACF,IAAD,EAAOE,IAAP,CAF2B,CAA7B;AAIA,QAAMQ,QAAQ,GAAGf,WAAW,CAAC,MAAK;AAC9BM,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAE,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACH,GAJ2B,EAI1B,EAJ0B,CAA5B;AAMAT,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIQ,KAAJ,EAAU;AACNO,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,KAArB;AAEH;AACJ,GALQ,EAKN,CAAEA,KAAF,CALM,CAAT;AASA,QAAMS,UAAU,GAAGhB,OAAO,CAAC,MAC3B;AACI,wBAAM;AAAA,8BACN;AAAA,+CAAc;AAAQ,UAAA,KAAK,EAAEG,IAAf;AAAqB,UAAA,QAAQ,EAAEc,CAAC,IAAIb,OAAO,CAAC,CAACa,CAAC,CAACC,MAAF,CAASC,KAAX;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,eAEN;AAAA,+CAAc;AAAQ,UAAA,KAAK,EAAEd,IAAf;AAAqB,UAAA,QAAQ,EAAEY,CAAC,IAAIX,OAAO,CAAC,CAACW,CAAC,CAACC,MAAF,CAASC,KAAX;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM,eAGN;AAAA,4BAAUhB,IAAV,SAAmBE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHM,eAIN;AAAA,gCAAcE,KAAK,CAACa,OAAN,CAAc,CAAd,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAJM;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAMH,GARyB,EAQxB,CAACjB,IAAD,EAAOE,IAAP,EAAaE,KAAb,CARwB,CAA1B;AAUA,SAAO;AAACE,IAAAA,OAAD;AAAUO,IAAAA,UAAV;AAAsBN,IAAAA,QAAtB;AAAgCC,IAAAA,WAAhC;AAA6CC,IAAAA,SAA7C;AAAwDC,IAAAA;AAAxD,GAAP;AACH,CA/CM;;GAAMX,Y","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\r\n\r\nexport const useCalculate = () => {\r\n    const [num1, setNum1] = useState<number>(0);\r\n    const [num2, setNum2] = useState<number>(0);\r\n    const [total, setTotal] = useState<number>(0);\r\n\r\n    const plusCal = useCallback(() =>{\r\n        setTotal(num1+num2)\r\n    },[num1, num2])\r\n\r\n    const minusCal = useCallback(() =>{\r\n        setTotal(num1-num2)\r\n    },[num1, num2])\r\n\r\n    const multiplyCal = useCallback(() =>{\r\n        setTotal(num1*num2)\r\n    },[num1, num2])\r\n\r\n    const DivideCal = useCallback(() =>{\r\n        setTotal(num1/num2);\r\n    },[num1, num2])\r\n\r\n    const resetCal = useCallback(() =>{\r\n        setNum1(0);\r\n        setNum2(0);\r\n        setTotal(0)\r\n    },[])\r\n\r\n    useEffect(() =>{\r\n        if (total){\r\n            console.log('Total', total)\r\n\r\n        }\r\n    }, [ total])\r\n\r\n\r\n    \r\n    const Calculator = useMemo(() =>\r\n    {\r\n        return<div>\r\n        <p>Number 1 : <input  value={num1} onChange={e => setNum1(+e.target.value)}/> </p> \r\n        <p>Number 2 : <input  value={num2} onChange={e => setNum2(+e.target.value)}/> </p>\r\n        <h4>Cal :{num1} + {num2} </h4>\r\n        <h4>Result : {total.toFixed(2)}</h4>\r\n        </div>\r\n    },[num1, num2, total])\r\n\r\n    return {plusCal, Calculator, minusCal, multiplyCal, DivideCal, resetCal }\r\n}"]},"metadata":{},"sourceType":"module"}