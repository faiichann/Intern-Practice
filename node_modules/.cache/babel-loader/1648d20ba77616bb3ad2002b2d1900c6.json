{"ast":null,"code":"var _jsxFileName = \"C:\\\\Vonder\\\\my-app\\\\src\\\\useCounter.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useCounter = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const increaseCounter = useCallback(() => {\n    setCounter(prev => prev + 1);\n  }, []);\n  const decreaseCounter = useCallback(() => {\n    setCounter(prev => prev - 1);\n  }, []);\n  const resetCounter = useCallback(() => {\n    setCounter(0);\n  }, []);\n  const counterComponet = useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Count: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }, [counter]);\n  useEffect(() => {\n    if (counter) {\n      console.log(\"Counter :\", counter);\n    }\n  }, [counter]);\n  return {\n    counter,\n    setCounter,\n    increaseCounter,\n    decreaseCounter,\n    resetCounter,\n    counterComponet\n  };\n};\n\n_s(useCounter, \"DsswXJ/9zunqU5+KWs/OJPN6gOg=\");","map":{"version":3,"sources":["C:/Vonder/my-app/src/useCounter.tsx"],"names":["useCallback","useEffect","useMemo","useState","useCounter","counter","setCounter","increaseCounter","prev","decreaseCounter","resetCounter","counterComponet","console","log"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,QAA1C,QAA0D,OAA1D;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAS,CAAT,CAAtC;AAEA,QAAMI,eAAe,GAAGP,WAAW,CAAC,MAAK;AACrCM,IAAAA,UAAU,CAAEE,IAAD,IAAmBA,IAAI,GAAG,CAA3B,CAAV;AACH,GAFkC,EAEjC,EAFiC,CAAnC;AAKA,QAAMC,eAAe,GAAGT,WAAW,CAAC,MAAK;AACrCM,IAAAA,UAAU,CAAEE,IAAD,IAAmBA,IAAI,GAAG,CAA3B,CAAV;AACH,GAFkC,EAEjC,EAFiC,CAAnC;AAKA,QAAME,YAAY,GAAGV,WAAW,CAAC,MAAK;AAClCM,IAAAA,UAAU,CAAE,CAAF,CAAV;AACH,GAF+B,EAE9B,EAF8B,CAAhC;AAKA,QAAMK,eAAe,GAAGT,OAAO,CAAC,MAChC;AACI,wBAAO;AAAA,4BAAYG,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAH8B,EAG7B,CAACA,OAAD,CAH6B,CAA/B;AAKAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGI,OAAH,EAAW;AACPO,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,OAAzB;AACH;AACJ,GAJQ,EAIN,CAACA,OAAD,CAJM,CAAT;AAMA,SAAO;AAAEA,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,eAAvB;AAAwCE,IAAAA,eAAxC;AAAyDC,IAAAA,YAAzD;AAAuEC,IAAAA;AAAvE,GAAP;AACH,CA9BM;;GAAMP,U","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\r\n\r\nexport const useCounter = () => {\r\n    const [counter, setCounter] = useState<number>(0);\r\n\r\n    const increaseCounter = useCallback(() =>{\r\n        setCounter((prev : number) => prev + 1  )\r\n    },[],\r\n    )\r\n\r\n    const decreaseCounter = useCallback(() =>{\r\n        setCounter((prev : number) => prev - 1  )\r\n    },[],\r\n    )\r\n\r\n    const resetCounter = useCallback(() =>{\r\n        setCounter( 0 )\r\n    },[],\r\n    )\r\n\r\n    const counterComponet = useMemo(() =>\r\n    {\r\n        return <h4>Count: {counter}</h4>\r\n    },[counter]\r\n    )\r\n    useEffect(() => {\r\n        if(counter){\r\n            console.log(\"Counter :\", counter)\r\n        }\r\n    }, [counter])\r\n\r\n    return { counter, setCounter, increaseCounter, decreaseCounter, resetCounter, counterComponet}\r\n}"]},"metadata":{},"sourceType":"module"}