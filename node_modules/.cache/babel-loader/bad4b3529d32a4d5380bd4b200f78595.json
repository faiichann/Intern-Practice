{"ast":null,"code":"var _jsxFileName = \"C:\\\\Vonder\\\\my-app\\\\src\\\\App.tsx\";\nimport React from 'react'; // import logo from './logo.svg';\n// import './App.css';\n\nimport { AppProvider } from 'contexts/AppContext';\nimport StudentBoard from 'components/StudentBoard';\nimport StudentInput from 'components/StudentInput';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [homeName, setHomeName] = useState<string>(\"\");\n  // const [isClose, setIsClose] = useState<boolean>(false);\n  // console.log(\"isClose :\" , isClose);\n  // useEffect(() => {\n  //   console.log(\"render\");\n  //   // setHomeName(\"Is use effect\" + (Math.random() * 99).toFixed(2));\n  // },[total]);\n  // const [count, setCount] = useState(0);\n  // // console.log(\"re-render parent component\");\n  // const resetCount = useCallback(() => {\n  //   setCount((prevCount) => prevCount + 1);\n  // }, []);\n  // const renderList = useMemo(() => {\n  //   console.log(\"render list\");\n  //   return Array.from(Array(100).keys()).map((key) => {\n  //     return <h3 key={key}> {key} count</h3>;\n  //   });\n  // }, []);\n  // const { increaseCounter, decreaseCounter, resetCounter, counterComponet} = useCounter();\n  // const { Calculator, plusCal, minusCal, multiplyCal,\n  //    DivideCal, resetCal,AllCalculator, EvalCal } = useCalculate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppProvider, {\n      children: [/*#__PURE__*/_jsxDEV(StudentBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StudentInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Vonder/my-app/src/App.tsx"],"names":["React","AppProvider","StudentBoard","StudentInput","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AAOA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAQC,YAAR,MAA2B,yBAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;;AAEA,SAASC,GAAT,GAAe;AACb;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BA6BE,qCA7BF,eAmCE;AAAA;AAAA;AAAA;AAAA,YAnCF,eAoCI,QAAC,WAAD;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;KAzEQA,G;AA2ET,eAAeA,GAAf","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport{ useEffect, useState, useMemo, useCallback} from 'react';\nimport Home from 'Home';\nimport { useCounter } from 'useCounter';\nimport { useCalculate } from 'useCalculate';\nimport { useNumpad } from 'useNumpad';\n\nimport { AppProvider } from 'contexts/AppContext';\nimport  StudentBoard  from 'components/StudentBoard';\nimport StudentInput from 'components/StudentInput';\n\nfunction App() {\n  // const [homeName, setHomeName] = useState<string>(\"\");\n  // const [isClose, setIsClose] = useState<boolean>(false);\n  // console.log(\"isClose :\" , isClose);\n\n  // useEffect(() => {\n  //   console.log(\"render\");\n  //   // setHomeName(\"Is use effect\" + (Math.random() * 99).toFixed(2));\n  // },[total]);\n\n  // const [count, setCount] = useState(0);\n\n  // // console.log(\"re-render parent component\");\n\n  // const resetCount = useCallback(() => {\n  //   setCount((prevCount) => prevCount + 1);\n  // }, []);\n\n  // const renderList = useMemo(() => {\n  //   console.log(\"render list\");\n  //   return Array.from(Array(100).keys()).map((key) => {\n  //     return <h3 key={key}> {key} count</h3>;\n  //   });\n  // }, []);\n\n  // const { increaseCounter, decreaseCounter, resetCounter, counterComponet} = useCounter();\n\n  // const { Calculator, plusCal, minusCal, multiplyCal,\n  //    DivideCal, resetCal,AllCalculator, EvalCal } = useCalculate();\n  return (\n    <div className=\"App\">\n      {/* <Home window={5} homeName={homeName}/>\n      <input onChange={({ target: { value } }) => setHomeName(value)}/>\n     <button onClick={() => setIsClose((prevState) => !prevState)}>Close</button>\n\n     <hr/> */}\n     {/* <div style={{alignItems: 'center'}}>\n     <h1 className=\"rgb\">โปรแกรมคิดเลข </h1>\n     { Calculator }\n     <button onClick={plusCal}>Plus</button> \n     <button onClick={minusCal}>Minus</button> \n     <button onClick={multiplyCal}>Multiply</button> \n     <button onClick={DivideCal}>Divide</button> \n     <button onClick={resetCal}>Reset</button> \n     </div>\n     <hr/>\n     \n     {counterComponet}\n     <button onClick = {increaseCounter}> + </button>\n     <button onClick = {decreaseCounter}> - </button>\n     <button onClick = {resetCounter}> reset </button>\n     <hr/>\n     {AllCalculator}\n     <button onClick = {EvalCal}> Calculate </button>\n     {/* <button onClick={() => setCount((prevCount) => prevCount + 1)}>\n        count ++++\n      </button>\n      <h2>Count: {count}</h2>\n      {renderList} */}\n      <>\n        {/* <h2>Count: {count}</h2>\n         */}\n        {/* <button onClick={decrement}>-</button>\n        <button onClick={incrementOtherCounter}>not use useCallback</button> */}\n      </>\n      <hr/>\n        <AppProvider>\n          <StudentBoard/>\n          <StudentInput/>\n        </AppProvider>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}